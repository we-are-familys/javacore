<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <artifactId>java8</artifactId>
    <groupId>com.hz.java8</groupId>
    <version>0.0.1-SNAPSHOT</version>
  </parent>

  <groupId>com.hz.java8</groupId>
  <artifactId>java8-ch03</artifactId>
  <version>0.0.1-SNAPSHOT</version>

  <name>java8-ch03</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>
  
  <description>
  	1、Lambda表达式: 参数列表、箭头、Lambda主体(自带return)
  	2、在哪里及如何使用Lambda
  	3、环绕执行模式: 打开资源-执行处理-资源关闭(如 文件操作、数据库操作),该设置和清理类似,并围绕执行处理逻辑
  	4、函数式接口及类型推断
  	5、方法引用
  	6、Lambda复合
  	
  	函数式接口中可以使用Lambda: 只定义一个抽象方法的接口即为函数式接口
  	函数描述符: 函数式接口的抽象方法的签名基本上就是Lambda表达式的签名,我们将这种抽象方法叫做函数描述符
  	函数式接口一般会使用注解@FunctionalInterface标注
  	
  	Java8引入的新的函数式接口(java.util.function包下): Predicate/Consumer/Function
  </description>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.7</maven.compiler.source>
    <maven.compiler.target>1.7</maven.compiler.target>
  </properties>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
        <!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.7.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.20.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
